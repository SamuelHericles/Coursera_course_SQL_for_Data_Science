Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just 
like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as 
the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and
 comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research
question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you
will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your
intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to
transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be
able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers.
If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are
lined appropriately.In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Profile the data by finding the total number of records for each of the tables below:
	
	
	---------------------------------------------
	For to answers this question you are use:
	
		select count (*) 
		from table_name;
	
	---------------------------------------------

	
i. Attribute table   = 10.000
ii. Business table   = 10.000
iii. Category table  = 10.000	
iv. Checkin table    = 10.000	
v. elite_years table = 10.000	
vi. friend table     = 10.000	
vii. hours table     = 10.000	
viii. photo table    = 10.000 	
ix. review table     = 10.000	
x. tip table         = 10.000	
xi. user table       = 10.000
	
------------------------------------------------------------------------------------------------------------------------------------------------------------

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify
   which foreign key.

	---------------------------------------------
	For to answers this question you are use:
	
		select count (id) 
		from table_name;
		
			--OR--
		
		select count(distinct business_id)
		from table_name;
	---------------------------------------------


i.   Business    = 10.000
ii.  Hours       = 1562	
iii. Category    = 2643
iv.  Attribute   = 1115
v.   Review      = 10.000
vi.  Checkin     = 493
vii. Photo       = 10.000
viii.Tip         = 537
ix.  User        = 10.000
x.   Friend      = 11
xi.  Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

------------------------------------------------------------------------------------------------------------------------------------------------------------


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	-Answer: No
	
	
	-SQL code used to arrive at answer:
	
	select count(*)
	from users
	where coalesce('name',
					'review_count',
					'yelping_since',
					'useful',
					'funny',
					'cool',
					'fans',
					'average_stars',
					'compliment_hot',
					'compliment_more',
					'compliment_profile',
					'compliment_cute',					
					'compliment_list',
					'compliment_note',
					'compliment_plain',
					'compliment_cool',					
					'compliment_funny',
					'compliment_writer',
					'compliment_photos',					
					) is null;
	
------------------------------------------------------------------------------------------------------------------------------------------------------------

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	---------------------------------------------
	For to answers this question you are use:
	
			-- MIN --
		select min(column_name)
		from table_name;
		
			-- MAX --
		select max(column_name)
		from table_name;

			-- AVG --
		select avg(column_name)
		from table_name;			
	-------------------------------------------- 
	
	i. Table: Review, Column: Stars
	
		min: 1
		max: 5			
		avg: 3.7082
	
	ii. Table: Business, Column: Stars
	
		min: 1.0
		max: 5.0
		avg: 3.6549
	
	iii. Table: Tip, Column: Likes
	
		min: 0
		max: 2
		avg: 0.0144
			
	iv. Table: Checkin, Column: Count
	
		min: 1 
		max: 53
		avg: 1.9414
	
	v. Table: User, Column: Review_count
	
		min: 0
		max: 2000
		avg: 24.2995
	
------------------------------------------------------------------------------------------------------------------------------------------------------------

5. List the cities with the most reviews in descending order:

	-SQL code used to arrive at answer:
	
		select 
		  city,
		  sum(review_count) as reviews_count
		  
		from business
		group by city
		order by reviews_count desc
		limit 25;
	
	-Copy and Paste the Result Below:
	
						+-----------------+---------------+
						| city            | reviews_count |
						+-----------------+---------------+
						| Las Vegas       |         82854 |
						| Phoenix         |         34503 |
						| Toronto         |         24113 |
						| Scottsdale      |         20614 |
						| Charlotte       |         12523 |
						| Henderson       |         10871 |
						| Tempe           |         10504 |
						| Pittsburgh      |          9798 |
						| Montréal        |          9448 |
						| Chandler        |          8112 |
						| Mesa            |          6875 |
						| Gilbert         |          6380 |
						| Cleveland       |          5593 |
						| Madison         |          5265 |
						| Glendale        |          4406 |
						| Mississauga     |          3814 |
						| Edinburgh       |          2792 |
						| Peoria          |          2624 |
						| North Las Vegas |          2438 |
						| Markham         |          2352 |
						| Champaign       |          2029 |
						| Stuttgart       |          1849 |
						| Surprise        |          1520 |
						| Lakewood        |          1465 |
						| Goodyear        |          1155 |
						+-----------------+---------------+

------------------------------------------------------------------------------------------------------------------------------------------------------------

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

	-SQL code used to arrive at answer:

		select 
		  sum(review_count) as number,
		  stars
		  
		from business
		where city = 'Avon'
		group by stars;


	-Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	
							+--------+-------+
							| number | stars |
							+--------+-------+
							|     10 |   1.5 |
							|      6 |   2.5 |
							|     88 |   3.5 |
							|     21 |   4.0 |
							|     31 |   4.5 |
							|      3 |   5.0 |
							+--------+-------+

ii. Beachwood

	-SQL code used to arrive at answer:

		select 
		  sum(review_count) as number,
		  stars
		  
		from business
		where city = 'Beachwood'
		group by stars;

	-Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
							+--------+-------+
							| number | stars |
							+--------+-------+
							|      8 |   2.0 |
							|      3 |   2.5 |
							|     11 |   3.0 |
							|      6 |   3.5 |
							|     69 |   4.0 |
							|     17 |   4.5 |
							|     23 |   5.0 |
							+--------+-------+
------------------------------------------------------------------------------------------------------------------------------------------------------------


7. Find the top 3 users based on their total number of reviews:
		
	-SQL code used to arrive at answer:
	
		select 
			name,
			review_count

		from user
		order by review_count desc
		limit 3;
		
	-Copy and Paste the Result Below:
	
					+--------+--------------+
					| name   | review_count |
					+--------+--------------+
					| Gerald |         2000 |
					| Sara   |         1629 |
					| Yuri   |         1339 |
					+--------+--------------+
					
------------------------------------------------------------------------------------------------------------------------------------------------------------


8. Does posing more reviews correlate with more fans?

	--------------------------------
	select 
	  name,
	  review_count,
	  fans
	FROM user
	order by fans desc
	--------------------------------
	
	-Please explain your findings and interpretation of the results:
	
			Not necessarily correlated, because review is a opnion fo the
		users, so this can positive or negative review.
	
	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Amy       |          609 |  503 |
	| Mimi      |          968 |  497 |
	| Harald    |         1153 |  311 |
	| Gerald    |         2000 |  253 |
	| Christine |          930 |  173 |
	| Lisa      |          813 |  159 |
	| Cat       |          377 |  133 |
	| William   |         1215 |  126 |
	| Fran      |          862 |  124 |
	| Lissa     |          834 |  120 |
	| Mark      |          861 |  115 |
	| Tiffany   |          408 |  111 |
	| bernice   |          255 |  105 |
	| Roanna    |         1039 |  104 |
	| Angela    |          694 |  101 |
	| .Hon      |         1246 |  101 |
	| Ben       |          307 |   96 |
	| Linda     |          584 |   89 |
	| Christina |          842 |   85 |
	| Jessica   |          220 |   84 |
	| Greg      |          408 |   81 |
	| Nieves    |          178 |   80 |
	| Sui       |          754 |   78 |
	| Yuri      |         1339 |   76 |
	| Nicole    |          161 |   73 |
	+-----------+--------------+------+
	

------------------------------------------------------------------------------------------------------------------------------------------------------------

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	-Answer: yes
		
	-SQL code used to arrive at answer:
	
		select  count(id) as number_of_reviews
		from review
		where text like "%love%" or text like '%hate%';
		
------------------------------------------------------------------------------------------------------------------------------------------------------------

	
10. Find the top 10 users with the most fans:
	
		select 
			name,
			fans
		from user
		order by fans desc
		limit 10
		
	-Copy and Paste the Result Below:

				+-----------+------+
				| name      | fans |
				+-----------+------+
				| Amy       |  503 |
				| Mimi      |  497 |
				| Harald    |  311 |
				| Gerald    |  253 |
				| Christine |  173 |
				| Lisa      |  159 |
				| Cat       |  133 |
				| William   |  126 |
				| Fran      |  124 |
				| Lissa     |  120 |
				+-----------+------+

------------------------------------------------------------------------------------------------------------------------------------------------------------


Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	+---------+----------+---------------+-------------------+----------------------+----------------+
	| city    | category |    avg_review | num_of_businesses | interval_hours       | stars_interval |
	+---------+----------+---------------+-------------------+----------------------+----------------+
	| Toronto | Food     | 20.9230769231 |                13 | Saturday|11:00-21:00 | 4-5            |
	| Toronto | Food     |          10.0 |                 7 | Saturday|8:00-22:00  | 2-3            |
	| Toronto | Food     |           3.0 |                 1 | None                 | None           |
	+---------+----------+---------------+-------------------+----------------------+----------------+
	
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	
	Companies food between 2 and 3 stars have the interval hours less than companies between 4 and 5 stars.

ii. Do the two groups you chose to analyze have a different number of reviews?
	
	Yes, see below the table with by stars_interval that you have more category food with
	between 4 and 5 stars and best averages reviews.
        
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	
	A bigger interval hours in company can be more customers utilize their services.

SQL code used for analysis:

		select city
		   ,category
		   ,avg(review_count) as avg_review
		   ,count(business.id) as num_of_businesses  
		   ,hours as interval_hours,
			   
			case								
			  when stars >= 2 and stars <= 3 then '2-3'
			  when stars >= 4 and stars <= 5 then '4-5'
		
		end stars_interval

			from business 							
				 left join category
				 on business.id = category.business_id
				 left join hours
				 on business.id = hours.business_id

			where city = 'Toronto' and category = 'Food'
			group by stars_interval
			order by avg_review desc;
		
		
------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		
2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones that are closed? 
List at least two differences and the SQL code you used to arrive at your answer.
	
	+---------------+-------------+-----------------+---------------+-----------+--------+-------+---------+
	| count_reviews | sum_reviews | average_reviews | average_stars | sum_stars | useful | funny | is_open |
	+---------------+-------------+-----------------+---------------+-----------+--------+-------+---------+
	|          8480 |      269300 |   31.7570754717 | 3.67900943396 |   31198.0 |     13 |    13 |       1 |
	|          1520 |       35261 |   23.1980263158 | 3.52039473684 |    5351.0 |      1 |     1 |       0 |
	+---------------+-------------+-----------------+---------------+-----------+--------+-------+---------+
		
i. Difference 1:
	
	Business open have many reviews than that not open.
         
ii. Difference 2:
        
	Business open have many stars than that not open.The opens are more funny and useful.
         
SQL code used for analysis:

	select 
	  count(b.review_count) as count_reviews,
	  sum(b.review_count)   as sum_reviews,
	  avg(b.review_count)   as average_reviews,
	  avg(b.stars)          as average_stars,
	  sum(b.stars)          as sum_stars,
	  COUNT(r.useful)       as useful,
	  COUNT(r.funny)        as funny,
	  is_open
	  
	  from business b left join review r on b.id = r.id

	  group by is_open
	  order by is_open desc;	
		
         
------------------------------------------------------------------------------------------------------------------------------------------------------------

		
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities
or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These 
are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         Here I chose to study the preference among different
types of food on yelp
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
     I will pick several types of food including “Chinese”,”Mexican”,”Korean”,”French”,”Italian”,”Japanese” and “Indian”. Then I will analyze their star
	 ratings and number of reviews so that I can get some insights on which type of food is popular on yelp.                       
                  
                  
iii. Output of your finished dataset:
        +----------+----------------------+---------------+-------------------+-----------+
		| category | number_Of_Resturants |    avg(stars) | avg(review_count) | city      |
		+----------+----------------------+---------------+-------------------+-----------+
		| Korean   |                    7 |           4.5 |               8.0 | Toronto   |
		| French   |                   12 |           4.0 |     135.083333333 | Las Vegas |
		| Chinese  |                   13 | 3.76923076923 |     423.230769231 | Las Vegas |
		| Mexican  |                   28 |         3.625 |              73.0 | Edinburgh |
		| Italian  |                   13 | 3.53846153846 |     78.2307692308 | Montréal  |
		| Indian   |                    6 |           3.5 |              32.0 | Aurora    |
		| Japanese |                   20 |         3.475 |             22.85 | Toronto   |
		+----------+----------------------+---------------+-------------------+-----------+
			 
iv. Provide the SQL code you used to create your final dataset:

	select 
		c.category,
		count(b.name) as number_Of_Resturants,
		avg(stars),
		avg(review_count),
		b.city
	
	from (business b inner join hours h on b.id = h.business_id)
	inner join category c on c.business_id = b.id
	where c.category in
		("Chinese","Mexican","French","Italian","Korean","Japanese","Indian")
	group by c.category
	order by avg(stars) desc;

